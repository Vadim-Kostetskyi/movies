{"version":3,"file":"static/js/264.9e21a996.chunk.js","mappings":"yOA4IA,UAjIc,WACZ,OAA4CA,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,mBAAxC,eAAqBC,GAArB,WACMC,GAASC,EAAAA,EAAAA,QAAO,MAMhBC,GAAWC,EAAAA,EAAAA,MACXC,EAAkBF,EAASG,OAAOC,QAAQ,WAAY,KAS5DC,EAAAA,EAAAA,YAAU,WACJH,IACFI,EAAAA,EAAAA,IAAeJ,GAAiBK,MAAK,SAAAC,GACnCC,QAAQC,IAAIF,EAAGG,MACfhB,EAASa,EAAGG,KAAKC,QAClB,GAEJ,GAAE,IA3Be,SA8CHC,EA9CG,0EA8ClB,WAAyBL,GAAzB,0FACEC,QAAQC,IAAIF,EAAGM,eACfN,EAAGO,iBAEGC,EAAaR,EAAGM,cAAcG,cAAc,OAC5CC,EACJV,EAAGM,cAAcK,uBAAuB,oBAAoB,GAGxDC,EAAOZ,EAAGM,cAAcO,wBACxBC,EAAY,MAAQF,EAAKG,IACzBC,EAAa,GAAKJ,EAAKK,KAE7BC,SAASC,KAAKC,MAAMC,SAAW,SAE/Bb,EAAWY,MAAME,SAAW,WAC5Bd,EAAWY,MAAMG,OAAS,IAC1Bb,EAAOc,UAAUC,IAAI,YAErBjB,EAAWY,MAAMM,UAAjB,oBAA0CV,EAA1C,eAA2DF,EAA3D,OAEMa,EAAU3B,EAAGM,cAAcsB,KArBnC,UAuByBC,MAAMF,GAvB/B,eAuBQG,EAvBR,iBAwBqBA,EAASC,OAxB9B,gCAyBQ,IAAIC,SAAQ,SAAAC,GAAO,OACvBC,YAAW,WACTD,GACD,GAAE,IAHoB,IAzB3B,QA8BEE,OAAO3C,SAASoC,KAAOE,EAASM,IA9BlC,6CA9CkB,sBA+ElB,OACE,4BACE,iBAAMC,SApDW,SAAArC,GACnBA,EAAGO,iBAECvB,KACFc,EAAAA,EAAAA,IAAed,GAAgBe,MAAK,SAAAC,GAClCC,QAAQC,IAAIF,GACZb,EAASa,EAAGG,KAAKC,QAClB,IACDf,EAAgB,CAAEiD,MAAOtD,IACzBC,EAAkB,IA/BpBgB,QAAQC,IAAIZ,EAAOiD,SAmCjBjD,EAAOiD,QAAQf,UAAUC,IAAI,aAEhC,EAqCG,UACE,iBAAKe,UAAU,MAAMC,IAAKnD,EAA1B,WACE,kBACEkD,UAAU,QACVE,KAAK,OACLC,SAvEU,SAAA3C,GAClB,IAAQ4C,EAAU5C,EAAGM,cAAbsC,MACR3D,EAAkB2D,EAAMC,cACzB,EAqESD,MAAO5D,EACP8D,YAAY,YAEd,mBAAQN,UAAU,aAAaE,KAAK,SAApC,UACE,gBAAKF,UAAU,aAAaO,IAAKC,EAAMC,IAAI,YAIhD/D,EAAMgE,OAAS,IACd,eAAIV,UAAU,WAAd,SACGtD,EAAMiE,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,GAAIC,EAAvB,EAAuBA,YAAaC,EAApC,EAAoCA,aAApC,OACT,eAAaf,UAAU,gBAAvB,UACE,UAAC,EAAAgB,KAAD,CACEC,QAASpD,EACTmC,UAAU,WACVkB,MAAK,UAAKlE,EAASmE,UAAd,OAAyBnE,EAASG,QACvCiE,IAAI,WACJhC,KAAI,kBAAayB,GACjBQ,GAAE,kBAAaR,GANjB,WAQE,iBAAKb,UAAU,UAAf,WACE,gBAAKA,UAAU,wBAAf,SACGe,EAAaO,QAAQ,MAExB,gBAAKtB,UAAU,sBACf,gBACEA,UAAU,MACVO,IAAG,0CAAqCO,GACxCL,IAAI,SAGR,iBAAMT,UAAU,WAAhB,SAA4BY,QApBvBC,EADA,OA2Bf,SAAC,KAAD,MAGL,C","sources":["elements/Movie.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport {\n  Outlet,\n  Link,\n  useSearchParams,\n  useLocation,\n  // navigate,\n} from 'react-router-dom';\nimport { getMovieByName } from 'constants/dafaultApi';\nimport lupa from './lupa.png';\n\nconst Movie = () => {\n  const [imageNameInput, setImageNameInput] = useState('');\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const boxRef = useRef(null);\n\n  const scrollToHeader = () => {\n    console.log(boxRef.current);\n  };\n\n  const location = useLocation();\n  const fromQueryString = location.search.replace(/\\?query=/, '');\n\n  // const path = document.location.href.length;\n\n  const inputChange = el => {\n    const { value } = el.currentTarget;\n    setImageNameInput(value.toLowerCase());\n  };\n\n  useEffect(() => {\n    if (fromQueryString) {\n      getMovieByName(fromQueryString).then(el => {\n        console.log(el.data);\n        setFilms(el.data.results);\n      });\n    }\n  }, []);\n\n  const handleSubmit = el => {\n    el.preventDefault();\n\n    if (imageNameInput) {\n      getMovieByName(imageNameInput).then(el => {\n        console.log(el);\n        setFilms(el.data.results);\n      });\n      setSearchParams({ query: imageNameInput });\n      setImageNameInput('');\n\n      scrollToHeader();\n\n      boxRef.current.classList.add('input-box');\n    }\n  };\n\n  async function moveImage(el) {\n    console.log(el.currentTarget);\n    el.preventDefault();\n\n    const imgElement = el.currentTarget.querySelector('img');\n    const imgBox =\n      el.currentTarget.getElementsByClassName('img-box-backdrop')[0];\n    // console.log(imgBox);\n\n    const rect = el.currentTarget.getBoundingClientRect();\n    const topOffset = 108.6 - rect.top;\n    const leftOffset = 30 - rect.left;\n\n    document.body.style.overflow = 'hidden';\n\n    imgElement.style.position = 'relative';\n    imgElement.style.zIndex = '5';\n    imgBox.classList.add('backdrop');\n\n    imgElement.style.transform = `translate(${leftOffset}px, ${topOffset}px)`;\n    // Попереднє завантаження сторінки за допомогою fetch\n    const nextUrl = el.currentTarget.href;\n\n    const response = await fetch(nextUrl);\n    const html = await response.text();\n    await new Promise(resolve =>\n      setTimeout(() => {\n        resolve();\n      }, 1000)\n    );\n    window.location.href = response.url;\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div className=\"box\" ref={boxRef}>\n          <input\n            className=\"input\"\n            type=\"text\"\n            onChange={inputChange}\n            value={imageNameInput}\n            placeholder=\"Search\"\n          />\n          <button className=\"search-btn\" type=\"submit\">\n            <img className=\"search-img\" src={lupa} alt=\"\" />\n          </button>\n        </div>\n      </form>\n      {films.length > 0 && (\n        <ul className=\"day-list\">\n          {films.map(({ original_title, id, poster_path, vote_average }) => (\n            <li key={id} className=\"day-list-item\">\n              <Link\n                onClick={moveImage}\n                className=\"day-link\"\n                state={`${location.pathname}${location.search}`}\n                rel=\"prefetch\"\n                href={`/movies/${id}`}\n                to={`/movies/${id}`}\n              >\n                <div className=\"img-box\">\n                  <div className=\"day-list-vote_average\">\n                    {vote_average.toFixed(1)}\n                  </div>\n                  <div className=\"img-box-backdrop\"></div>\n                  <img\n                    className=\"img\"\n                    src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                    alt=\"\"\n                  />\n                </div>\n                <span className=\"day-text\">{original_title}</span>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Movie;\n"],"names":["useState","imageNameInput","setImageNameInput","films","setFilms","useSearchParams","setSearchParams","boxRef","useRef","location","useLocation","fromQueryString","search","replace","useEffect","getMovieByName","then","el","console","log","data","results","moveImage","currentTarget","preventDefault","imgElement","querySelector","imgBox","getElementsByClassName","rect","getBoundingClientRect","topOffset","top","leftOffset","left","document","body","style","overflow","position","zIndex","classList","add","transform","nextUrl","href","fetch","response","text","Promise","resolve","setTimeout","window","url","onSubmit","query","current","className","ref","type","onChange","value","toLowerCase","placeholder","src","lupa","alt","length","map","original_title","id","poster_path","vote_average","Link","onClick","state","pathname","rel","to","toFixed"],"sourceRoot":""}