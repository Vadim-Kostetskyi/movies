{"version":3,"file":"static/js/681.7256f380.chunk.js","mappings":"4JA8BA,UA1BgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWH,GAASI,MAAK,SAAAC,GAAE,OAAIN,EAAWM,EAAGC,KAAKC,QAAvB,GAC5B,GAAE,CAACP,KAGF,gCACGF,EAAQU,OAAS,IAChB,wBACGV,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,2BACE,qCAAaF,MACb,uBAAIC,MAFGC,EADE,MAQG,IAAnBd,EAAQU,QACP,oEACE,OAGT,C","sources":["components/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'API/dafaultApi';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviews(movieId).then(el => setReviews(el.data.results));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 && (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {reviews.length === 0 ? (\n        <p>We don`t have any reviews for this movie</p>\n      ) : null}\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","then","el","data","results","length","map","author","content","id"],"sourceRoot":""}